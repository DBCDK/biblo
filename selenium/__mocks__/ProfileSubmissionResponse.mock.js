// Autogenerated!
/* eslint-disable */
const nock = require('nock');
module.exports = function ProfileSubmissionResponse(times) {
  nock('https://dynamodb.eu-west-1.amazonaws.com:443', {encodedQueryParams: true})
    .post('/')
    .times(times)

    .reply(200, {
      "Count": 1, "Items": [{
        "createdEpoch": {"N": "1502798384464"},
        "message": {"S": "{\"postId\":2,\"creatorId\":3,\"commentId\":8,\"created\":1502798384464}"},
        "userId": {"S": "user_1"}, "messageType": {"S": "type-commentWasAdded"}
      }], "ScannedCount": 125
    });

  nock('https://dynamodb.eu-west-1.amazonaws.com:443', {encodedQueryParams: true})
    .post('/')
    .times(times)

    .reply(200, {
      "Count": 1, "Items": [{
        "createdEpoch": {"N": "1502798384464"},
        "message": {"S": "{\"postId\":2,\"creatorId\":3,\"commentId\":8,\"created\":1502798384464}"},
        "userId": {"S": "user_1"}, "messageType": {"S": "type-commentWasAdded"}
      }], "ScannedCount": 125
    });

  nock('http://localhost:3000')
    .get(/\/api\/Profiles\/1?.+$/)
    .filteringPath(function() {  // cature any query
      return '/';
    })
    .times(times)
    .query(true)
    .reply(200, {
      username: 'bobby_hansen',
      displayName: '',
      favoriteLibrary: {},
      description: null,
      email: null,
      phone: null,
      created: '2018-03-12T13:13:14.851Z',
      lastUpdated: '2018-03-12T13:13:14.851Z',
      hasFilledInProfile: null,
      birthday: null,
      fullName: null,
      palleid: null,
      id: 1,
      communityRoles: [{name: 'member', id: 1}],
      image:
        {
          url:
            {
              small: '/no_profile.png',
              medium: '/no_profile.png',
              large: '/no_profile.png',
              square: '/no_profile.png'
            }
        },
      isModerator: false,
      quarantined: false,
      userMessages: {unreadMessages: 0, messages: []}
    });

  nock('http://localhost:3000')
    .get(/\/api\/Profiles\/1?.+$/)
    .filteringPath(function() { // cature any query
      return '/';
    })
    .times(times)
    .query(true)
    .reply(200, {
      username: 'bobby_hansen',
      displayName: 'testhest',
      favoriteLibrary: {},
      description: null,
      email: null,
      phone: null,
      created: '2018-03-12T13:13:14.851Z',
      lastUpdated: '2018-03-12T13:13:14.851Z',
      hasFilledInProfile: true,
      birthday: null,
      fullName: null,
      palleid: null,
      id: 1,
      communityRoles: [{name: 'member', id: 1}],
      image:
        {
          url:
            {
              small: '/no_profile.png',
              medium: '/no_profile.png',
              large: '/no_profile.png',
              square: '/no_profile.png'
            }
        },
      isModerator: false,
      quarantined: false,
      userMessages: {unreadMessages: 0, messages: []}
    });

  nock('http://localhost:3000')
    .get('/api/Quarantines/1/check-if-profile-is-quarantined')
    .times(times)
    .reply(200, {
      "quarantined": false
    });

  nock('http://localhost:3000')
    .get('/api/Quarantines/1/check-if-profile-is-quarantined')
    .times(times)
    .reply(200, {
      "quarantined": false
    });

  nock('http://localhost:3000')
    .post('/api/Profiles/checkIfDisplayNameIsTaken')
    .times(times)
    .reply(200, {
      "username": "testhest",
      "exists": false
    });

  nock('http://localhost:3000')
    .post('/api/Profiles/checkIfDisplayNameIsTaken')
    .times(times)
    .reply(200, {
      "username": "testhest",
      "exists": false
    });

  nock('http://localhost:3000')
    .post('/api/Profiles/checkIfDisplayNameIsTaken')
    .times(times)
    .reply(200, {
      "username": "testhest",
      "exists": false
    });

  nock('http://localhost:3000')
    .put(/\/api\/Profiles\/1?.+$/)
    .times(times)
    .reply(200,
      {
        "username": "bobby_hansen", "displayName": "testhest", "favoriteLibrary": {"libraryId": "714703"},
        "description": "", "email": "abc@def.gh", "phone": "", "created": "2018-03-12T13:13:14.851Z",
        "lastUpdated": "2018-03-12T13:13:14.851Z", "hasFilledInProfile": true, "birthday": null, "fullName": "",
        "palleid": null, "id": 1
      });
};
