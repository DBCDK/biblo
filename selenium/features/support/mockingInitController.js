require('../../../src/init.js');
const nock = require('nock');
const fs = require('fs');

module.exports.run = function(proc) {
  if (proc.type === 'worker') {
    proc.on('masterMessage', (message) => {
      if (message && message.event === 'loadMock' && message.mockName) {
        const mockPath = `${__dirname}/../../__mocks__/${message.mockName}.mock.js`;

        try {
          nock.cleanAll();
          const mockRunnner = require(mockPath);
          mockRunnner();
        }
        catch (er) {
          console.log('Creating mock for:', message.mockName);

          function loadMockListener(msg) {
            const nockObject = nock.recorder.play();
            nock.recorder.clear();
            nock.restore();

            proc.removeListener('masterMessage', loadMockListener);

            const mockFileContents = `// Autogenerated!\nconst nock = require('nock'); module.exports = function ${message.mockName} () {${nockObject.join('  ')}};`;
            fs.writeFile(mockPath, mockFileContents, (err) => console.log(err ? `File was not written! ${err}` : 'Mock was created!'));
          }

          proc.on('masterMessage', loadMockListener);

          try {
            nock.recorder.rec({
              dont_print: true
            });
          }
          catch(e) {}
        }

        proc.sendToMaster(`mockWasLoaded-${message.mockName}`);
      }
    });
  }
};
